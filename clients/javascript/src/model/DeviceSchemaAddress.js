/*
 * Integration Services API Documentation
 * This is the API documentation for the Integration Services. Have a look at the repository for examples at [Github](https://github.com/iotaledger/integration-services).             For further information on the Audit Trail GW API have a look at [Audit Trail API](https://github.com/iotaledger/integration-services/blob/master/api/usage-audit-trail-GW.md) and head to             [SSI Bridge](https://github.com/iotaledger/integration-services/blob/master/api/usage-ssi-bridge.md) for information about the SSI Bridge.             
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The DeviceSchemaAddress model module.
 * @module model/DeviceSchemaAddress
 * @version 1.0.0
 */
export class DeviceSchemaAddress {
  /**
   * Constructs a new <code>DeviceSchemaAddress</code>.
   * PostalAddress schema, see the specification at: https://schema.org/PostalAddress
   * @alias module:model/DeviceSchemaAddress
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>DeviceSchemaAddress</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DeviceSchemaAddress} obj Optional instance to populate.
   * @return {module:model/DeviceSchemaAddress} The populated <code>DeviceSchemaAddress</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DeviceSchemaAddress();
      if (data.hasOwnProperty('@context'))
        obj.context = ApiClient.convertToType(data['@context'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('alternateName'))
        obj.alternateName = ApiClient.convertToType(data['alternateName'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('url'))
        obj.url = ApiClient.convertToType(data['url'], 'String');
      if (data.hasOwnProperty('image'))
        obj.image = ApiClient.convertToType(data['image'], Object);
      if (data.hasOwnProperty('sameAs'))
        obj.sameAs = ApiClient.convertToType(data['sameAs'], Object);
      if (data.hasOwnProperty('addressCountry'))
        obj.addressCountry = ApiClient.convertToType(data['addressCountry'], 'String');
      if (data.hasOwnProperty('addressLocality'))
        obj.addressLocality = ApiClient.convertToType(data['addressLocality'], 'String');
      if (data.hasOwnProperty('addressRegion'))
        obj.addressRegion = ApiClient.convertToType(data['addressRegion'], 'String');
      if (data.hasOwnProperty('postOfficeBoxNumber'))
        obj.postOfficeBoxNumber = ApiClient.convertToType(data['postOfficeBoxNumber'], 'String');
      if (data.hasOwnProperty('postalCode'))
        obj.postalCode = ApiClient.convertToType(data['postalCode'], 'String');
      if (data.hasOwnProperty('streetAddress'))
        obj.streetAddress = ApiClient.convertToType(data['streetAddress'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} context
 */
DeviceSchemaAddress.prototype.context = undefined;

/**
 * @member {String} type
 */
DeviceSchemaAddress.prototype.type = undefined;

/**
 * @member {String} alternateName
 */
DeviceSchemaAddress.prototype.alternateName = undefined;

/**
 * @member {String} name
 */
DeviceSchemaAddress.prototype.name = undefined;

/**
 * @member {String} description
 */
DeviceSchemaAddress.prototype.description = undefined;

/**
 * @member {String} url
 */
DeviceSchemaAddress.prototype.url = undefined;

/**
 * @member {Object} image
 */
DeviceSchemaAddress.prototype.image = undefined;

/**
 * @member {Object} sameAs
 */
DeviceSchemaAddress.prototype.sameAs = undefined;

/**
 * @member {String} addressCountry
 */
DeviceSchemaAddress.prototype.addressCountry = undefined;

/**
 * @member {String} addressLocality
 */
DeviceSchemaAddress.prototype.addressLocality = undefined;

/**
 * @member {String} addressRegion
 */
DeviceSchemaAddress.prototype.addressRegion = undefined;

/**
 * @member {String} postOfficeBoxNumber
 */
DeviceSchemaAddress.prototype.postOfficeBoxNumber = undefined;

/**
 * @member {String} postalCode
 */
DeviceSchemaAddress.prototype.postalCode = undefined;

/**
 * @member {String} streetAddress
 */
DeviceSchemaAddress.prototype.streetAddress = undefined;

