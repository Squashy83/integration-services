/*
 * Integration Services API Documentation
 * This is the API documentation for the Integration Services. Have a look at the repository for examples at [Github](https://github.com/iotaledger/integration-services).             For further information on the Audit Trail GW API have a look at [Audit Trail API](https://github.com/iotaledger/integration-services/blob/master/api/usage-audit-trail-GW.md) and head to             [SSI Bridge](https://github.com/iotaledger/integration-services/blob/master/api/usage-ssi-bridge.md) for information about the SSI Bridge.             
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The ChannelInfoSearchSchema model module.
 * @module model/ChannelInfoSearchSchema
 * @version 1.0.0
 */
export class ChannelInfoSearchSchema {
  /**
   * Constructs a new <code>ChannelInfoSearchSchema</code>.
   * @alias module:model/ChannelInfoSearchSchema
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ChannelInfoSearchSchema</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ChannelInfoSearchSchema} obj Optional instance to populate.
   * @return {module:model/ChannelInfoSearchSchema} The populated <code>ChannelInfoSearchSchema</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ChannelInfoSearchSchema();
      if (data.hasOwnProperty('authorId'))
        obj.authorId = ApiClient.convertToType(data['authorId'], 'String');
      if (data.hasOwnProperty('author'))
        obj.author = ApiClient.convertToType(data['author'], 'String');
      if (data.hasOwnProperty('topicType'))
        obj.topicType = ApiClient.convertToType(data['topicType'], 'String');
      if (data.hasOwnProperty('topicSource'))
        obj.topicSource = ApiClient.convertToType(data['topicSource'], 'String');
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('latestMessage'))
        obj.latestMessage = ApiClient.convertToType(data['latestMessage'], 'Date');
      if (data.hasOwnProperty('limit'))
        obj.limit = ApiClient.convertToType(data['limit'], 'Number');
      if (data.hasOwnProperty('index'))
        obj.index = ApiClient.convertToType(data['index'], 'Number');
    }
    return obj;
  }
}

/**
 * @member {String} authorId
 */
ChannelInfoSearchSchema.prototype.authorId = undefined;

/**
 * @member {String} author
 */
ChannelInfoSearchSchema.prototype.author = undefined;

/**
 * @member {String} topicType
 */
ChannelInfoSearchSchema.prototype.topicType = undefined;

/**
 * @member {String} topicSource
 */
ChannelInfoSearchSchema.prototype.topicSource = undefined;

/**
 * @member {Date} created
 */
ChannelInfoSearchSchema.prototype.created = undefined;

/**
 * @member {Date} latestMessage
 */
ChannelInfoSearchSchema.prototype.latestMessage = undefined;

/**
 * @member {Number} limit
 */
ChannelInfoSearchSchema.prototype.limit = undefined;

/**
 * @member {Number} index
 */
ChannelInfoSearchSchema.prototype.index = undefined;

